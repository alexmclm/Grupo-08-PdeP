import barrileteCosmico.*
import Localidades.*
import Usuario.*
import MediosDeTransporte.*
import Viajes.*

describe "instancias de destinos, usuarios , medios de tranporte , viajes y barrilete cosmico"{
	const garlicSea
	const silversSea
	const lastToninas
	const goodAiris
	//Usuarios
	const albertoK
	const elOsoRulo
	const pabloHari
	// mediosDeTransporte
	const transporteGalacticus
	const flechaBus
	
	
	const barrileteCosmico 
	//decidi instanciar tanto localidades como usuario con Km en 0 , para ver simplemente jajaj
		fixture{
			garlicSea = new Localidades("Garlic Sea", #{"Caña de pescar", "Piloto"},2500,100)
			silversSea = new Localidades("Silver´s Sea",#{"Protector Solar", "Equipo de Buceo"},1350,250)
			lastToninas = new Localidades("Last Toninas",#{"Vacuna Gripal", "Vacuna B", "Necronomicon"},3500,300)
			goodAiris = new Localidades("Good Airis",#{"Cerveza", "Protector Solar"},1500,400)
			
			pabloHari = new Usuario("pabloHari",#{lastToninas,goodAiris},[],1500,garlicSea)
			albertoK = new Usuario("el alberto del pueblo", #{},[],2000,silversSea)
			elOsoRulo = new Usuario("No rulo no hagas eso_ok", #{},[],2500,lastToninas)
			
			//lo hice clase para hacer este chiche jajajaaj
			barrileteCosmico = new barrileteCosmico(#{garlicSea,silversSea,lastToninas,goodAiris},#{},#{})
			//transportes
			transporteGalacticus = new MediosDeTransporte(100,10)
			flechaBus = new MediosDeTransporte(150,15)
		}

test "Destinos importantes de Barrilete Cosmico : Garlic´s Sea" {
	var destinos=barrileteCosmico.destinosImportantes()
	assert.equals(#{garlicSea,lastToninas},destinos)
	//assert.equals("Garlic´s Sea",destinos.nombre()) son 2 destinos importantes

}
test "Al aplicar descuento del 25% a 'Last Toninas', su precio es de $2625"{
	lastToninas.precioConDescuento(25)
	assert.equals(2625,lastToninas.precio())
}
test "Al aplicar descuento del 25% a 'Last Toninas', agregar al equipaje 'Certificado De Descuento' "{
	lastToninas.precioConDescuento(25)
	assert.that(lastToninas.equipaje().contains("Certificado De Descuento"))
}
test "Silver´s Sea no es un sitio Peligroso "{
	
	assert.notThat(silversSea.esPeligroso())

}
test "Aplicar descuento del 15% a todos los destinos de Barrilete Cosmico-'Garlic Sea debe quedar con $2125'"{
	barrileteCosmico.darDescuento(15)
	assert.equals(2125,garlicSea.precio()) 
}
test "Aplicar descuento del 15% a todos los destinos de Barrilete Cosmico-'Silver Sea' debe quedar con $1147,5'" {
	barrileteCosmico.darDescuento(15)
	assert.equals(1147.5,silversSea.precio()) 
}
test "Aplicar descuento del 15% a todos los destinos de Barrilete Cosmico-'Last Toninas' debe quedar con $2975'" {
	barrileteCosmico.darDescuento(15)
	assert.equals(2975,lastToninas.precio()) 
}
test "Aplicar descuento del 15% a todos los destinos de Barrilete Cosmico-'Good Airis debe quedar con $1275'" {
	barrileteCosmico.darDescuento(15)
	assert.equals(1275,goodAiris.precio()) 
}
test "Destinos mas peligrosos, debe ser LastToninas"{

	assert.equals(#{lastToninas},barrileteCosmico.lugaresPeligrosos())
	//no hice el metodo
}
test "Barrilete Cosmico es una empresa Extrema, si lo es"{
	
	assert.that(barrileteCosmico.esExtrema())
}
test "Carta de Destinos de Barrilete Cosmico"{

	assert.equals(#{"Garlic Sea","Silver´s Sea","Last Toninas","Good Airis"},barrileteCosmico.cartasDeDestinos().asSet())
	
}
/*
test "Millas de Pablo Harri, 500KM"{
	assert.equals(500,pabloHari.kilometrosRecorridos())
}
test "Pablo Hari puede volar a Silver´s Sea "{
	assert.equals(true,pabloHari.alcanzaDinero(silversSea))
}
test "Pablo Hari vuela a Silver´s Sea"{
	pabloHari.volarA(silversSea)
	assert.equals(150,pabloHari.plataQueTiene()) 
	}
 
*/
 /* PARTE 2 : NO SE QUE TEST PROBAR JAJAJAJAAJ */
 test " la distancia entre  garlic sea y last toninas son de 200 km" {
 	
 	assert.equals(200,garlicSea.distanciasCon(lastToninas))
 }
test " distancia entre garlic sea y silversSea son de 150km" {
	assert.equals(150,garlicSea.distanciasCon(silversSea))
}
test "distancia entre garlicSea y good airis son de 300km "{
	assert.equals(300,garlicSea.distanciasCon(goodAiris))
}
test "distancia entre Sirvers Sea y Last Toninas son de 50km"{
	assert.equals(50,silversSea.distanciasCon(lastToninas))
}
test "distancia entre Silvers Sea y Good Airis son de 150km"{
	assert.equals(150,silversSea.distanciasCon(goodAiris))
}
test "distancia entre last Toninas con Good Airis son de 100km"{
	assert.equals(100,lastToninas.distanciasCon(goodAiris))
}

test "alberto va de gira con tranporte galacticus , su gira es solo por lastToninas, precio: xxxx "{
	assert.that(true)
}
//usuario viaje y su localidad de origen sea el de destino
//tema de los costos, transportes , va cambiando a los viajes
//
}